version: '3.3'
services:
  web:
    build:
      context: .docker/dockerfile/nginx
      args:
        - uid=$UID
        - gid=$GID
    image: nginx:latest
    container_name: nginx
    hostname: 'gomer.local'
    volumes:
      - ./.docker/conf/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./data/nginx/www:/var/www/
      - ./data/nginx/Logs:/var/log/nginx/
      - ./data/nginx/html:/usr/share/nginx/html/
    environment:
      - UID=$UID
      - GID=$GID
    ports:
      - "80:80"
      - "443:443"
    restart: always
    depends_on:
      - php
      - postgresDb
      - mysql
    networks:
      static-network:
        ipv4_address: 172.20.20.20
  mysql:
    image: mysql:latest
    hostname: 'mysql.gomer.local'
    container_name: mysql
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - ./.docker/conf/mysql/:/docker-entrypoint-initdb.d/
      - ./data/mysql:/var/lib/mysql
    networks:
      static-network:
        ipv4_address: 172.20.20.23
  php:
    build:
      context: .docker/dockerfile/php-fpm
      args:
        - uid=$UID
        - gid=$GID
        - user=$USER
        - group=$GROUP
    restart: always
    container_name: php-fpm
    volumes:
      - ./.docker/conf/php/php.ini:/usr/local/etc/php/conf.d/php.ini
      - ./.docker/conf/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - ./data/nginx/www/:/var/www
      - $SSH_AUTH_SOCK:$SSH_AUTH_SOCK
      - ~/.ssh:/var/www/gomer.local/.ssh
    environment:
      - SSH_AUTH_SOCK=$SSH_AUTH_SOCK
      - UID=$UID
      - GID=$GID
      - USER=$USER
      - GROUP=$GROUP
    extra_hosts:
      - "cg.rozetka.com.ua rozetka.com.ua admin.rozetka.com.ua api.rozetka.com.ua my.rozetka.com.ua apteka.rozetka.com.ua hard.rozetka.com.ua i2.rozetka.ua i1.rozetka.ua:78.27.198.116"
      - "my.rozetka.com.ua cg.rozetka.com.ua rozetka.com.ua admin.rozetka.com.ua api.rozetka.com.ua my.rozetka.com.ua apteka.rozetka.com.ua hard.rozetka.com.ua i2.rozetka.ua i1.rozetka.ua:78.27.198.116"
      - "gomer.local:172.20.20.20"
      - "api.gomer.local:172.20.20.20"
      - "gitlab-ce.local:10.0.0.41"
    networks:
      static-network:
        ipv4_address: 172.20.20.21
  postgresDb:
    image: postgres:11.5
    container_name: postgres
    hostname: 'pgsql.gomer.local'
    restart: always
    environment:
      - POSTGRES_DB=${PGSQL_DATABASE}
      - POSTGRES_USER=${PGSQL_USER}
      - POSTGRES_PASSWORD=${PGSQL_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres/data/:/var/lib/postgresql/data/
      - ./.docker/conf/postgres/:/docker-entrypoint-initdb.d/
    networks:
      static-network:
        ipv4_address: 172.20.20.22
  rabbitmq:
    image: rabbitmq:3.7.5-management
    container_name: 'rabbit-mq'
    hostname: 'rmq.gomer.local'
    restart: always
    ports:
      - '15672:15672'
      - '5672:5672'
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_DEFAULT_VHOST=${RABBITMQ_DEFAULT_VHOST}
    networks:
      static-network:
        ipv4_address: 172.20.20.24
  redis:
    container_name: redis
    hostname: 'redis.gomer.local'
    image: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis:/data
    entrypoint: redis-server --requirepass 960c3dac4fa81b4204779fd16ad7c954f95942876b9c4fb1a255667a9dbe389d
    networks:
      static-network:
        ipv4_address: 172.20.20.25
  mock_server:
    image: jamesdbloom/mockserver:latest
    networks: 
      static-network:
        ipv4_address: 172.20.20.30
    container_name: mock_server
    ports:
      - "1080:1080"
    environment:
      - LOG_LEVEL=WARN        
networks:
  static-network:
    ipam:
       driver: default
       config:
         - subnet: 172.20.0.0/16
